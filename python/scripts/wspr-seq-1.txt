#    Command lines are of this form:
#        Major command: [Params | Minor command] [param, param, ...]
#        Minor command/params are comma separated
#        
#    Comments start with # in the first column and can only extend over one line.
#        
#    Command types:
#      Control commands:
#        SEQ         # Start a sequence
#        ENDSEQ      # End of loop
#        TIME        # Start a time banded section
#        ENDTIME     # End a time banded section
#        PAUSE       # Pause the script file
#        MSG         # Output a message to the console
#        COMPLETE    # Script complete
#      Hardware commands:
#        LPF         # Commands related to the LPF filters
#        ANTENNA     # Commands related to antenna switching
#        LOOP        # Commands related to the loop switching and tuning
#        RADIO       # CAT commands to external radios
#      Software commands:
#        WSPR        # Commands related to WSPR
#        WSPRRYPI    # Commands related to WsprryPi        
#        FCD         # Commands related to the FunCubeDonglePro+
#    
#    Command lines:
#      Control commands:
#        SEQ: n      # Iterate to END n times. If n is -1 iterate for ever.
#        ENDSEQ:     # Loopback to last SEQ while iteration < n
#        TIME: start, end
#                    # The commands banded by TIME and ENDTIME to be executed only between start, end time in hours
#                    # 24 hour clock.
#        ENDTIME:     SKIP to ENDTIME if time criteria not met
#        PAUSE: n.n  # Pause execution for n.n seconds
#        MSG: message# Output the message
#        COMPLETE:   # End of script
#      Hardware commands:
#        LPF: band   # Where band is LPF-160/LPF-80/LPF-40 etc. Mapping is involved to relay activation.
#        ANTENNA: source, dest
#                    # Sets up a route between an antenna and a destination TX or RX capability.
#                    # e.g. 160-80m-loop, FCDPro+. Mapping is involved to relay activation.
#                    # see defs.py ANTENNA_TO_INTERNAL for antenna constants
#        LOOP: INIT, % low_setpoint, % high_setpoint, % motor_speed, driver max speed_factor
#                    # Initialise the loop tuner with offsets etc
#        LOOP: BAND, antenna, extension
#                    # Switch the loop to band, and extend the actuator to % extension.
#                    # see defs.py ANTENNA_TO_LOOP_INTERNAL for antenna constants
#        RADIO: CAT, radio, com_port, baud_rate
#                    # Supported radios IC7100 | FT817, baud-rate. Must be executed to initiate CAT control.
#                BAND, MHz
#                    # Set the radio frequency to the WSPR frequency for BAND using CAT
#                MODE, LSB|USB|...
#                    # Set the radio mode using CAT
#      Software commands:
#        WSPR:   INVOKE                  # Invoke WSPR if not running. Must be running before any other WSPR command.
#                RESET                   # Reset
#                IDLE, on|off            # Set idle on/off, i.e stop RX/TX
#                BAND, B_160 etc ...     # Set band for reporting
#                TX, on|off              # Set TX to 20% or 0%
#                POWER, nn.nn, nn.nn     # Available, required. Adjust power output when using external radio TX
#                CYCLES, n               # Wait for n receive cycles
#                SPOT, on|off            # Set spotting on/off.
#        WSPRRY: WSPRRY_OPTIONS, option_list    # Selection of -p -s -f -r -x -o -t -n. Must be set before START.
#                WSPRRY_CALLSIGN, callsign      # Set callsign for tx data. Must be set before START.
#                WSPRRY_LOCATOR, locator        # Set locator for tx data. Must be set before START.
#                WSPRRY_PWR, power              # Set Tx power in dBm for tx data. Must be set before START.
#                WSPRRY_START, f1, f2, f3, ...  # Start WsprryPi with the given frequency sequence and settings.
#                WSPRRY_WAIT                    # Wait for WsprryPi to terminate
#                WSPRRY_KILL                    # Uncerimoneously kill WsprryPi (this may not work on Windows)
#                WSPRRY_STOP                    # Stop WsprryPI if running.
#        FCD:                            # Set FCDPro+ attributes using fcdctl program
#                BAND, band              # Set the FCDPro+ frequency to the WSPR band + IF offset.
#                LNA, gain               # Set the FCDPro+ LNA gain, 0 == off, 1 == on.
#                MIXER, gain             # Set the FCDPro+ MIXER gain, 0 == off, 1 == on.
#                IF, gain                # Set the FCDPro+ IF gain, 0-59 dB.
#                STATUS                  # Show status

MSG: Starting WSPR script

MSG: Initialise WSPR program
WSPR: INVOKE
PAUSE: 5
WSPR: IDLE, on
WSPR: TX, off
WSPR: POWER, 10.0, 0.1
WSPR: SPOT, off
PAUSE: 5

MSG: Initialise WsprryPi
WSPRRY: WSPRRY_OPTIONS, -s, -o
WSPRRY: WSPRRY_CALLSIGN, G3UKB
WSPRRY: WSPRRY_LOCATOR, IO92wf
WSPRRY: WSPRRY_PWR, 10
PAUSE: 3

MSG: Initialise Loop Controller
LOOP: LOOP_INIT, 20, 900, 40, 400
PAUSE: 3

MSG: Initialise FCDPro+
FCD: LNA, off
FCD: MIXER, off
FCD: IF, 0
PAUSE: 3

MSG:
MSG:

MSG: Set up pre-conditions for sequence
MSG: Set antenna route 'loop to RPi (WsprryPi TX output)'
ANTENNA: A_LOOP, SS_WSPRRYPI
MSG: Set antenna route 'EFD to FCDPro+ (FCDPro+ RX input)
ANTENNA: A_EFD_80_10, SS_FCD_PRO_PLUS
MSG: Put WSPR in run mode
WSPR: IDLE, off

MSG:
MSG:

MSG: Iterate sequence for ever, requires Ctrl C to terminate
SEQ: -1
MSG: -----------Starting sequence----------------
MSG:
MSG: **Run WsprryPi TX on 160m**
MSG: Tune loop for 160m WSPR frequency
LOOP: LOOP_BAND, LOOP-160, 33
MSG: Set LPF to 160m
LPF: LPF-160
MSG: Run one TX sequence followed by 2 transmission gaps
MSG: Wait for WsprryPi completion if still running...
WSPRRY: WSPRRY_WAIT
MSG: WsprryPi not running/exited
WSPRRY: WSPRRY_START, 160m, 0, 0
PAUSE: 5

MSG:
MSG:

MSG: **Run WSPR RX using FCDPro+ IQ on 80m**
MSG: Set FCDPro+ frequency. The IF offset is automatic for the selected band WSPR frequency.
FCD: BAND, B_80
MSG: Set WSPR running on 80m. WSPR details and IQ input must be pre-configured.
MSG: Switch band to 80m (wait for WSPR to be IDLE)...
WSPR: BAND, B_80
MSG: Band switch completed
WSPR: SPOT, on
MSG: Wait for 3 RX cycles
WSPR: CYCLES: 3

MSG:
MSG:

MSG: **Run WSPR RX using FCDPro+ IQ on 40m**
MSG: Switch band to 40m (wait for WSPR to be IDLE)...
WSPR: BAND, B_40
MSG: Band switch completed
MSG: Set FCDPro+ frequency. The frequency offset is automatic for the selected band WSPR frequency
FCD: BAND, B_40
MSG: Wait for 3 RX cycles
WSPR: CYCLES: 3

MSG:
MSG:

MSG: **Run WsprryPi TX on 80m**
MSG: Wait for completion if still running
WSPRRY: WSPRRY_WAIT
MSG: WsprryPi not running/exited
MSG: Tune loop for 80m WSPR frequency
LOOP: LOOP_BAND, LOOP-80, 18
MSG: Set LPF to 80m
LPF: LPF-80
MSG: Run one TX sequence followed by 2 transmission gaps
WSPRRY: WSPRRY_START, 80m, 0, 0
PAUSE: 5

MSG:
MSG:

ENDSEQ:
COMPLETE: